{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","value","setValue","number","isNumber","className","onClick","console","log","length","oldValue","slice","cancel","map","el","e","target","display","onKeyDown","key","handleKey","answer","evaluate","toString","err","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuFeA,MAnFf,WAAgB,IAAD,EACaC,IAAMC,SAAS,KAD5B,mBACNC,EADM,KACCC,EADD,OAESH,IAAMC,UAAS,GAFxB,mBAERG,EAFQ,KAEDC,EAFC,KAwCb,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACA,sBAAKA,UAAU,SAAf,UACE,wBAAQA,UAAU,aAAaC,QAAS,kBArB5CJ,EAAS,KACTK,QAAQC,IAAI,gBACZJ,GAAS,IAmBL,iBAGA,qBAAKC,UAAU,UAAf,SAA0BJ,IAC1B,wBAAQI,UAAU,aAAaC,QAAS,kBApC/B,WAEb,GADAC,QAAQC,WAAWP,GACfA,EAAMQ,OAAS,GAAe,WAAVR,IAA8B,IAATE,EAAgB,CAC3D,IAAIO,EAAWT,EAAMU,MAAM,GAAI,GAC/BT,EAASQ,QAETR,EAAS,KAEXE,GAAS,GA4ByCQ,IAA9C,kBAIF,sBAAKP,UAAU,SAAf,UACG,CACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACAQ,KAAI,SAACC,GAAD,OACJ,wBAAQb,MAAOa,EAAIT,UAAU,MAAMC,QAAS,SAACS,GAAD,OAlEpC,SAACA,GACf,IAAIL,EAAWT,EAEbC,EADe,MAAbQ,IAA6B,IAATP,EACbY,EAAEC,OAAOf,MACNS,EAASK,EAAEC,OAAOf,OAChCG,GAAS,GACTG,QAAQC,IAAI,MA4D6CS,CAAQF,IAAIG,UAAW,SAACH,GAAD,OAlClE,SAACA,GAChBb,EAASa,EAAEI,KAiC2EC,CAAUL,IAAzF,SACGD,OAGL,wBAAQT,UAAU,MAAMC,QAAS,kBA/CxB,WACbF,GAAS,GACT,IACE,IAAIiB,EAASC,YAASrB,GACtBC,EAAS,IAAImB,EAAOE,YACpB,MAAOC,GACPtB,EAAS,WAyCgCuB,IAAvC,wBCzERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b03e1f22.chunk.js","sourcesContent":["import React from \"react\";\nimport { evaluate } from \"mathjs\";\nimport './App.css';\n\nfunction App() {\n  const [value, setValue] = React.useState(\"0\");\n  let [number,isNumber]=React.useState(false);\n\n  const display = (e) => {\n    let oldValue = value;\n    if (oldValue === \"0\" || number===true)\n      setValue(e.target.value);\n    else setValue(oldValue+e.target.value);\n    isNumber(false);\n    console.log('ll');\n  };\n  const cancel = () => {\n    console.log(typeof value);\n    if (value.length > 1 && value !== \"Error!\" &&number===false) {\n      let oldValue = value.slice(0, -1);\n      setValue(oldValue);\n    } else {\n      setValue(\"0\");\n    }\n    isNumber(false);\n  };\n  const clearAll = () => {\n    setValue(\"0\");\n    console.log(\"clicked\");\n    isNumber(false);\n  };\n  const result = () => {\n    isNumber(true);\n    try {\n      let answer = evaluate(value);\n      setValue('='+answer.toString());\n    } catch (err) {\n      setValue(\"Error!\");\n    }\n  };\n  const handleKey=(e)=>{\n   setValue(e.key);\n  }\n\n  return (\n    <div className='container'>\n      <div className='calculator'>\n      <div className=\"screen\">\n        <button className=\"screen-key\" onClick={() => clearAll()}>\n          CLR\n        </button>\n        <div className=\"display\">{value}</div>\n        <button className=\"screen-key\" onClick={() => cancel()}>\n          C\n        </button>\n      </div>\n      <div className=\"keypad\">\n        {[\n          \"7\",\n          \"8\",\n          \"9\",\n          \"/\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"*\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"-\",\n          \"0\",\n          \".\",\n          \"+\",\n        ].map((el) => (\n          <button value={el} className=\"key\" onClick={(e) => display(e)} onKeyDown={(e)=>handleKey(e)}>\n            {el}\n          </button>\n        ))}\n        <button className=\"key\" onClick={() => result()}>\n          =\n        </button>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}